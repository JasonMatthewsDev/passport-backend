{"version":3,"sources":["components/AddFactory/index.js","components/ClickInput/index.js","components/Factory/index.js","App.js","index.js"],"names":["process","REACT_APP_API_ORIGIN","AddFactory","_ref","onSubmit","nameInputRef","useRef","alert","useAlert","useEffect","current","focus","submitHandler","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","e","data","res","_ref3","error","wrap","_context","prev","next","preventDefault","name","target","value","lowerBound","upperBound","itemCount","fetch","concat","method","headers","Content-Type","body","JSON","stringify","sent","status","json","success","stop","_x","apply","this","arguments","react_default","createElement","className","type","placeholder","pattern","ref","required","defaultValue","min","max","Input","cancel","onChange","title","_ref$type","inputRef","onKeyDown","key","role","aria-label","onClick","ClickInput","_useState","useState","_useState2","slicedToArray","edit","setEdit","Label","ClickInput_Input","v","Factory","factory","deleteEnabled","setDeleteEnabled","_id","nodes","nameRegex","RegExp","updateFactory","change","changeHandler","field","val","test","defineProperty","deleteHandler","_callee2","_ref4","_context2","src_components_ClickInput","map","n","i","WS_HOST","window","location","origin","replace","webSocket","WebSocket","App","factories","setFactories","_useState3","_useState4","showAddForm","setShowAddForm","onmessage","parse","Factories","onclose","setTimeout","Fragment","src_components_Factory","src_components_AddFactory","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","render","react_alert","assign","template","AlertTemplate","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.39f82260.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport './index.css';\r\n\r\nconst { REACT_APP_API_ORIGIN = '' } = process.env;\r\n\r\nconst AddFactory = ({ onSubmit }) => {\r\n  const nameInputRef = useRef(null);\r\n  const alert = useAlert()\r\n\r\n  useEffect(() => nameInputRef.current.focus(), []);\r\n\r\n  //Send request to create a new factory\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: e.target.name.value,\r\n      lowerBound: e.target.lowerBound.value,\r\n      upperBound: e.target.upperBound.value,\r\n      itemCount: e.target.itemCount.value,\r\n    };\r\n\r\n    onSubmit();\r\n\r\n    const res = await fetch(`${REACT_APP_API_ORIGIN}/factory`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (res.status !== 201) {\r\n      const { error } = await res.json();\r\n      alert.error(error);\r\n    } else {\r\n      alert.success('Factory Created');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"add-factory-container\">\r\n        <div className=\"add-factory-control\">\r\n          <label>Name <span className=\"required\">*</span></label>\r\n          <input type=\"text\" name=\"name\" placeholder=\"Name...\" pattern=\"[a-zA-Z0-9 -]+\" ref={nameInputRef} required />\r\n        </div>\r\n        <div className=\"add-factory-control\">\r\n          <label>Item Count <span className=\"required\">*</span></label>\r\n          <input type=\"number\" name=\"itemCount\" placeholder=\"Item Count...\" defaultValue=\"3\" min=\"1\" max=\"15\" required />\r\n        </div>\r\n        <div className=\"add-factory-control\">\r\n          <label>Lower Bound <span className=\"required\">*</span></label>\r\n          <input type=\"number\" name=\"lowerBound\" defaultValue=\"1\" placeholder=\"Lower Bound...\" required />\r\n        </div>\r\n        <div className=\"add-factory-control\">\r\n          <label>Upper Bound <span className=\"required\">*</span></label>\r\n          <input type=\"number\" name=\"upperBound\" defaultValue=\"500\" placeholder=\"Upper Bound...\" required />\r\n        </div>\r\n        <button type=\"submit\">Add Factory</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default AddFactory;","import React, { useEffect, useRef, useState } from 'react';\r\nimport './index.css';\r\n\r\nconst Input = ({ cancel, onChange, pattern, title, value, type = 'text' }) => {\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => inputRef.current.focus(), []);\r\n  const keyDownHandler = ({ key }) => {\r\n    if (key === 'Escape') {\r\n      cancel();\r\n    }\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    onChange(inputRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <span className=\"click-input-wrapper\">\r\n        <input className=\"click-input-text\" type={type} onKeyDown={keyDownHandler} ref={inputRef} defaultValue={value} pattern={pattern} title={title} />\r\n        <button type=\"submit\" className=\"click-input-button\">\r\n          <span role=\"img\" aria-label=\"confirm\">✔️</span>\r\n        </button>\r\n        <button className=\"click-input-button\" onClick={cancel}>\r\n          <span role=\"img\" aria-label=\"cancel\">❌</span>\r\n        </button>\r\n      </span>\r\n    </form>\r\n  )\r\n}\r\n\r\n//A simple JIRA inspired click to edit re-usable field. Starts a span until clicked where it's replaced with an input.\r\n//Options for this implementation are currently just text input type and number.\r\nconst ClickInput = ({ value, onChange, pattern, title, type }) => {\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const Label = <span className=\"click-input-label\" onClick={() => setEdit(true)}>{value}</span>;\r\n  const changeHandler = v => {\r\n    setEdit(false);\r\n    onChange(v)\r\n  }\r\n  return (\r\n    edit ? <Input value={value} cancel={() => setEdit(false)} onChange={changeHandler} type={type} pattern={pattern} title={title} /> : Label\r\n  )\r\n}\r\n\r\nexport default ClickInput;","import React, { useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport './index.css';\r\n\r\nimport { ClickInput } from '..';\r\n\r\nconst { REACT_APP_API_ORIGIN = '' } = process.env;\r\n\r\nconst Factory = factory => {\r\n  const [deleteEnabled, setDeleteEnabled] = useState(true);\r\n  const alert = useAlert()\r\n\r\n  const { _id, lowerBound, name, nodes, upperBound } = factory;\r\n  const nameRegexStr = '^[a-zA-Z0-9 -]+$';\r\n  const nameRegex = new RegExp(nameRegexStr);\r\n\r\n  //Sends request to the server to update an existing factory.\r\n  const updateFactory = async change => {\r\n    const body = JSON.stringify({\r\n      change\r\n    });\r\n\r\n    const res = await fetch(`${REACT_APP_API_ORIGIN}/factory/${_id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body,\r\n    });\r\n  \r\n    if (res.status !== 202) {\r\n      const { error } = await res.json();\r\n      alert.error(error);\r\n    } else {\r\n      alert.success('Factory Updated');\r\n    }\r\n  };\r\n\r\n  const changeHandler = (field, val) => {\r\n    if (field === 'name' && !nameRegex.test(val)) {\r\n      return;\r\n    }\r\n\r\n    updateFactory({ [field]: val });\r\n  };\r\n\r\n  //Sends request to the server to delete an existing factory.\r\n  const deleteHandler = async () => {\r\n    setDeleteEnabled(false);\r\n  \r\n    const res = await fetch(`${REACT_APP_API_ORIGIN}/factory/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    });\r\n  \r\n    if (res.status !== 202) {\r\n      const { error } = await res.json();\r\n      alert.error(error);\r\n    } else {\r\n      alert.success('Factory Deleted');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"container\">\r\n      <div className=\"factory-inputs-p\">\r\n        <span className=\"factory-name\">\r\n          <ClickInput value={name} onChange={v => changeHandler('name', v)} pattern=\"[a-zA-Z0-9 -]+\" title=\"Letters, numbers, spaces and - only\" />\r\n        </span>\r\n        {\r\n          deleteEnabled ?\r\n            <button className=\"factory-delete-button\" onClick={deleteHandler}>\r\n              <span role=\"img\" aria-label=\"delete\">❌</span>\r\n            </button> :\r\n            <span>&nbsp;</span>\r\n        }\r\n        <span className=\"factory-lower-bound\">\r\n          <ClickInput value={lowerBound} type=\"number\" onChange={v => changeHandler('lowerBound', v)} />\r\n        </span>\r\n        <span className=\"factory-upper-bound\">\r\n          <ClickInput value={upperBound} type=\"number\" onChange={v => changeHandler('upperBound', v)} />\r\n        </span>\r\n      </div>\r\n      <ul>\r\n        {nodes.map((n, i) => <li key={i}><div>{n}</div></li>)}\r\n      </ul>\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default Factory;","import React, { useState } from 'react';\n\nimport './App.css';\n\nimport { AddFactory, Factory } from './components';\n\nconst WS_HOST = window.location.origin.replace(/^http/, 'ws');\nlet webSocket = new WebSocket(WS_HOST);\n\nconst App = () => {\n  const [factories, setFactories] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  //For the purposes of this demo the entire tree is rebuilt and sent on each change.\n  webSocket.onmessage = ({ data }) => setFactories(JSON.parse(data).Factories);\n  //If server disconnects, try to reconnect after 5 seconds. This is mostly for development\n  //A more robust solution that retries more than once is probably a good idea for a real production app.\n  webSocket.onclose = () => setTimeout(() => {\n    webSocket = new WebSocket(WS_HOST);\n    webSocket.onmessage = ({ data }) => setFactories(JSON.parse(data).Factories);\n  }, 5000);\n\n  return (\n    <>\n      <ul className=\"tree-container\">\n        Root\n        <div className=\"tree-root\">\n          {factories.map(({ _id, name, lowerBound, upperBound, nodes }) => (<Factory name={name} lowerBound={lowerBound} upperBound={upperBound} nodes={nodes} _id={_id} key={_id} />))}\n        </div>\n      </ul>\n      <div className=\"add-factory-form\">\n        {\n          showAddForm ?\n            <AddFactory onSubmit={() => setShowAddForm(false)} /> :\n            <button onClick={() => setShowAddForm(true)}>Create Factory</button>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport { render } from 'react-dom';\nimport App from './App';\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  transition: transitions.SCALE\n}\n\nconst Root = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n)\n\n//Mount the root component\nrender(<Root />, document.getElementById('root'));"],"sourceRoot":""}